[{"/home/dev/workspace/Task-List-Typescript-With-API-s/src/index.tsx":"1","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/Main/Main.tsx":"2","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/InitialScreen/InitialScreen.tsx":"3","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Contexts/UserContext.tsx":"4","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/LoginComponent/LoginComponent.tsx":"5","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/RegisterComponent/RegisterComponent.tsx":"6","/home/dev/workspace/Task-List-Typescript-With-API-s/src/App.tsx":"7","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomInput.tsx":"8","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/TaskList/TaskList.tsx":"9","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/AddItemComponent/AddItemComponent.tsx":"10","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/TaskListItem/TaskListItem.tsx":"11","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomTextArea.tsx":"12","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomButton.tsx":"13","/home/dev/workspace/Task-List-Typescript-With-API-s/src/theme/index.tsx":"14"},{"size":708,"mtime":1612552426113,"results":"15","hashOfConfig":"16"},{"size":3827,"mtime":1612553874702,"results":"17","hashOfConfig":"16"},{"size":962,"mtime":1612542524115,"results":"18","hashOfConfig":"16"},{"size":212,"mtime":1612534514561,"results":"19","hashOfConfig":"16"},{"size":2597,"mtime":1612552365805,"results":"20","hashOfConfig":"16"},{"size":3293,"mtime":1612546084695,"results":"21","hashOfConfig":"16"},{"size":796,"mtime":1612534523754,"results":"22","hashOfConfig":"16"},{"size":629,"mtime":1612549450375,"results":"23","hashOfConfig":"16"},{"size":604,"mtime":1612552389685,"results":"24","hashOfConfig":"16"},{"size":2362,"mtime":1612553739665,"results":"25","hashOfConfig":"16"},{"size":700,"mtime":1612553801481,"results":"26","hashOfConfig":"16"},{"size":617,"mtime":1612550810277,"results":"27","hashOfConfig":"16"},{"size":782,"mtime":1612553694378,"results":"28","hashOfConfig":"16"},{"size":171,"mtime":1612546199897,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nklul1",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dev/workspace/Task-List-Typescript-With-API-s/src/index.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/Main/Main.tsx",["62"],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/InitialScreen/InitialScreen.tsx",["63","64"],"import React, { useState } from 'react';\nimport styles from './InitialScreen.module.css';\nimport { LoginComponent } from '../../components/LoginComponent/LoginComponent';\nimport { RegisterComponent } from '../../components/RegisterComponent/RegisterComponent';\nimport { Container } from \"@chakra-ui/react\";\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from \"@chakra-ui/react\";\n\nexport const InitialScreen = () => {\n    return (\n        <Container>\n            <Tabs isFitted variant=\"enclosed\">\n                <TabList mb=\"1em\">\n                    <Tab>Login</Tab>\n                    <Tab>Register</Tab>\n                </TabList>\n                <TabPanels>\n                    <TabPanel>\n                        <LoginComponent />\n                    </TabPanel>\n                    <TabPanel>\n                        <RegisterComponent />\n                    </TabPanel>\n                </TabPanels>\n            </Tabs>\n        </Container>\n    );\n}\n","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Contexts/UserContext.tsx",[],["65","66"],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/LoginComponent/LoginComponent.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/RegisterComponent/RegisterComponent.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/App.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomInput.tsx",["67"],"import React from 'react';\n// import styles from './CustomInput.module.css';\nimport {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    Input,\n    Center\n} from \"@chakra-ui/react\";\n\nexport const CustomInput: React.FC<customInputProps> = ({ label, type, name, register, error = '' }: customInputProps) => {\n    return (\n        <FormControl id={name} mt={5} isInvalid={error != ''}>\n            <FormLabel>{label}</FormLabel>\n            <Input type={type} name={name} ref={register} />\n            <Center>\n                <FormErrorMessage>{error}</FormErrorMessage>\n            </Center>\n        </FormControl>\n    );\n}","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/TaskList/TaskList.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/AddItemComponent/AddItemComponent.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/TaskListItem/TaskListItem.tsx",["68"],"import React from 'react';\nimport { CustomButton } from '../Elements/CustomButton';\nimport { Box, Flex, Spacer, Text } from '@chakra-ui/react';\n\ninterface Props {\n    task: Task,\n    deleteTaskParent: (_id: string) => void\n}\n\nexport const TaskListItem: React.FC<Props> = ({ task, deleteTaskParent }) => {\n    return (\n        <Flex align={'center'} borderBottomWidth={1} mt={2} mb={2}>\n            <Text>{task.description}</Text>\n            <Spacer />\n            <CustomButton\n                label='-'\n                type='button'\n                click={() => {\n                    deleteTaskParent(task._id)\n                }}\n                color='red'\n            />\n        </Flex>\n    );\n};","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomTextArea.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomButton.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/theme/index.tsx",[],{"ruleId":"69","severity":1,"message":"70","line":56,"column":8,"nodeType":"71","endLine":56,"endColumn":10,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"77","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":14},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":13,"column":56,"nodeType":"84","messageId":"85","endLine":13,"endColumn":58},{"ruleId":"73","severity":1,"message":"86","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":13},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["87"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Box' is defined but never used.",{"desc":"90","fix":"91"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [history]",{"range":"92","text":"93"},[1488,1490],"[history]"]