[{"/home/dev/workspace/Task-List-Typescript-With-API-s/src/index.tsx":"1","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/Main/Main.tsx":"2","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/InitialScreen/InitialScreen.tsx":"3","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Contexts/UserContext.tsx":"4","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/LoginComponent/LoginComponent.tsx":"5","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/RegisterComponent/RegisterComponent.tsx":"6","/home/dev/workspace/Task-List-Typescript-With-API-s/src/App.tsx":"7","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomInput.tsx":"8","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/TaskList/TaskList.tsx":"9","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/AddItemComponent/AddItemComponent.tsx":"10","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/TaskListItem/TaskListItem.tsx":"11","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomTextArea.tsx":"12","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomButton.tsx":"13","/home/dev/workspace/Task-List-Typescript-With-API-s/src/theme/index.tsx":"14"},{"size":708,"mtime":1612552426113,"results":"15","hashOfConfig":"16"},{"size":3804,"mtime":1612551941740,"results":"17","hashOfConfig":"16"},{"size":962,"mtime":1612542524115,"results":"18","hashOfConfig":"16"},{"size":212,"mtime":1612534514561,"results":"19","hashOfConfig":"16"},{"size":2597,"mtime":1612552365805,"results":"20","hashOfConfig":"16"},{"size":3293,"mtime":1612546084695,"results":"21","hashOfConfig":"16"},{"size":796,"mtime":1612534523754,"results":"22","hashOfConfig":"16"},{"size":629,"mtime":1612549450375,"results":"23","hashOfConfig":"16"},{"size":604,"mtime":1612552389685,"results":"24","hashOfConfig":"16"},{"size":2328,"mtime":1612550894491,"results":"25","hashOfConfig":"16"},{"size":737,"mtime":1612552412804,"results":"26","hashOfConfig":"16"},{"size":617,"mtime":1612550810277,"results":"27","hashOfConfig":"16"},{"size":663,"mtime":1612543275709,"results":"28","hashOfConfig":"16"},{"size":171,"mtime":1612546199897,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nklul1",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dev/workspace/Task-List-Typescript-With-API-s/src/index.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/Main/Main.tsx",["63"],"import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { AddItemComponent } from '../../components/AddItemComponent/AddItemComponent';\nimport { TaskListComponent } from '../../components/TaskList/TaskList';\nimport { UserContext } from '../../Contexts/UserContext';\nimport {\n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n    MenuGroup,\n    MenuDivider,\n    Flex,\n    Spacer,\n    Box,\n    Heading,\n    Button,\n    Container,\n} from \"@chakra-ui/react\"\n\ntype res = {\n    data: {\n        data: Array<Task>,\n        token: string\n    }\n    status: number\n}\n\nexport const Main = () => {\n    const [tasks, setTasks] = useState<Array<Task>>([]);\n    const { user } = useContext(UserContext);\n    const history = useHistory();\n\n\n    useEffect(() => {\n\n        if (!localStorage.getItem('userTaskToken')) {\n            history.push('/');\n\n        }\n        axios.get(`${process.env.REACT_APP_BASE_URL}/task`, {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('userTaskToken')}`\n            }\n        }).then((response: res) => {\n            if (response.status === 200) {\n                setTasks(response.data.data);\n            } else if (response.status === 400) {\n                console.log(\"something went wrong\");\n            }\n        }).catch(error => {\n            console.log(error);\n            console.log(\"something went wrong\");\n        })\n    }, [])\n\n    const addTask = (task: Task) => {\n        let tempTasks = [...tasks];\n        tempTasks.push(task);\n        setTasks(tempTasks);\n    }\n\n    const deleteTask = (_id: string) => {\n        axios.delete(`${process.env.REACT_APP_BASE_URL}/task/${_id}`, {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('userTaskToken')}`\n            }\n        }).then((response: res) => {\n\n            if (response.status === 200) {\n                let tempTasks = [...tasks];\n                tempTasks.splice(tempTasks.findIndex(function (i) {\n                    return i._id === _id;\n                }), 1);\n                setTasks(tempTasks);\n            } else if (response.status === 400) {\n                console.log(\"something went wrong\");\n            }\n        }).catch(error => {\n            console.log(error);\n            console.log(\"something went wrong\");\n        })\n    }\n\n    return (\n        <div>\n            <Flex borderWidth=\"1px\" p={8}>\n                <Box p=\"2\">\n                    <Heading size=\"md\"> Tasks</Heading>\n                </Box>\n                <Spacer />\n                <Box>\n                    <Menu>\n                        <MenuButton as={Button}>\n                            {user?.name}\n                        </MenuButton>\n                        <MenuList>\n                            <MenuGroup title=\"Profile\">\n                                <MenuItem>My Profile</MenuItem>\n                            </MenuGroup>\n                            <MenuDivider />\n                            <MenuGroup>\n                                <MenuItem onClick={() => {\n                                    localStorage.removeItem('userTaskToken');\n                                    history.push('/');\n                                }}>LogOut</MenuItem>\n                            </MenuGroup>\n                        </MenuList>\n                    </Menu>\n                </Box>\n            </Flex>\n\n            <Container mt={10} borderWidth={2} borderRadius={10}>\n                <AddItemComponent addTask={addTask} />\n            </Container>\n\n            <Container mt={10} borderWidth={2} borderRadius={10}>\n                <TaskListComponent userTasks={tasks} deleteTask={deleteTask} />\n            </Container>\n        </div>\n    );\n}\n",["64","65"],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/InitialScreen/InitialScreen.tsx",["66","67"],"import React, { useState } from 'react';\nimport styles from './InitialScreen.module.css';\nimport { LoginComponent } from '../../components/LoginComponent/LoginComponent';\nimport { RegisterComponent } from '../../components/RegisterComponent/RegisterComponent';\nimport { Container } from \"@chakra-ui/react\";\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from \"@chakra-ui/react\";\n\nexport const InitialScreen = () => {\n    return (\n        <Container>\n            <Tabs isFitted variant=\"enclosed\">\n                <TabList mb=\"1em\">\n                    <Tab>Login</Tab>\n                    <Tab>Register</Tab>\n                </TabList>\n                <TabPanels>\n                    <TabPanel>\n                        <LoginComponent />\n                    </TabPanel>\n                    <TabPanel>\n                        <RegisterComponent />\n                    </TabPanel>\n                </TabPanels>\n            </Tabs>\n        </Container>\n    );\n}\n","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Contexts/UserContext.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/LoginComponent/LoginComponent.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/RegisterComponent/RegisterComponent.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/App.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomInput.tsx",["68"],"import React from 'react';\n// import styles from './CustomInput.module.css';\nimport {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    Input,\n    Center\n} from \"@chakra-ui/react\";\n\nexport const CustomInput: React.FC<customInputProps> = ({ label, type, name, register, error = '' }: customInputProps) => {\n    return (\n        <FormControl id={name} mt={5} isInvalid={error != ''}>\n            <FormLabel>{label}</FormLabel>\n            <Input type={type} name={name} ref={register} />\n            <Center>\n                <FormErrorMessage>{error}</FormErrorMessage>\n            </Center>\n        </FormControl>\n    );\n}","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/TaskList/TaskList.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/AddItemComponent/AddItemComponent.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/TaskListItem/TaskListItem.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomTextArea.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomButton.tsx",["69"],"import React from 'react';\nimport styles from './CustomButton.module.css';\nimport { Button, Center } from \"@chakra-ui/react\";\n\ninterface customButtonProps {\n    _id?: string,\n    type: \"button\" | \"submit\" | \"reset\",\n    label: string,\n    classNamee?: string,\n    disableButton?: boolean\n    click?: () => void,\n    isLoading?: boolean\n}\nexport const CustomButton = ({ label, type, classNamee = '', disableButton = false, click, isLoading = false }: customButtonProps) => {\n    return (\n        <Center color=\"white\">\n            <Button mt={5} type={type} disabled={disableButton} onClick={click} isLoading={isLoading}>{label}</Button>\n        </Center>\n    );\n}","/home/dev/workspace/Task-List-Typescript-With-API-s/src/theme/index.tsx",[],{"ruleId":"70","severity":1,"message":"71","line":56,"column":8,"nodeType":"72","endLine":56,"endColumn":10,"suggestions":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"82","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":13,"column":56,"nodeType":"85","messageId":"86","endLine":13,"endColumn":58},{"ruleId":"78","severity":1,"message":"82","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["87"],"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"desc":"90","fix":"91"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [history]",{"range":"92","text":"93"},[1488,1490],"[history]"]