[{"/home/dev/workspace/Task-List-Typescript-With-API-s/src/index.tsx":"1","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/Main/Main.tsx":"2","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/InitialScreen/InitialScreen.tsx":"3","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Contexts/UserContext.tsx":"4","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/LoginComponent/LoginComponent.tsx":"5","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/RegisterComponent/RegisterComponent.tsx":"6","/home/dev/workspace/Task-List-Typescript-With-API-s/src/App.tsx":"7","/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomInput.tsx":"8"},{"size":625,"mtime":1612376982757,"results":"9","hashOfConfig":"10"},{"size":3103,"mtime":1612475828176,"results":"11","hashOfConfig":"10"},{"size":998,"mtime":1612458420525,"results":"12","hashOfConfig":"10"},{"size":194,"mtime":1612475750929,"results":"13","hashOfConfig":"10"},{"size":2451,"mtime":1612475317786,"results":"14","hashOfConfig":"10"},{"size":3180,"mtime":1612475199905,"results":"15","hashOfConfig":"10"},{"size":841,"mtime":1612475973978,"results":"16","hashOfConfig":"10"},{"size":423,"mtime":1612458229575,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"nklul1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dev/workspace/Task-List-Typescript-With-API-s/src/index.tsx",[],["37","38"],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/Main/Main.tsx",["39","40","41"],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/Pages/InitialScreen/InitialScreen.tsx",["42"],"import React, { useState } from 'react';\nimport styles from './InitialScreen.module.css';\nimport { LoginComponent } from '../../components/LoginComponent/LoginComponent';\nimport { RegisterComponent } from '../../components/RegisterComponent/RegisterComponent';\nimport { CustomToggleButton } from '../../components/Elements/CustomToggleButton';\n\nexport const InitialScreen = () => {\n    const [activeComponent, setActiveComponent] = useState('login');\n    return (\n        <div className={styles.container}>\n            <div className={styles.btnContainer}>\n                <CustomToggleButton label={'Login'} type={'button'} click={() => {\n                    setActiveComponent('login')\n                }} />\n                <CustomToggleButton label={'Register'} type={'button'} click={() => {\n                    setActiveComponent('register')\n                }} />\n            </div>\n            {activeComponent == \"login\" ? <LoginComponent /> : <RegisterComponent />}\n        </div>\n    );\n}\n","/home/dev/workspace/Task-List-Typescript-With-API-s/src/Contexts/UserContext.tsx",[],["43","44"],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/LoginComponent/LoginComponent.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/RegisterComponent/RegisterComponent.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/App.tsx",[],"/home/dev/workspace/Task-List-Typescript-With-API-s/src/components/Elements/CustomInput.tsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":35,"column":33,"nodeType":"51","messageId":"52","endLine":35,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":44,"column":8,"nodeType":"55","endLine":44,"endColumn":10,"suggestions":"56"},{"ruleId":"49","severity":1,"message":"50","line":59,"column":33,"nodeType":"51","messageId":"52","endLine":59,"endColumn":35},{"ruleId":"49","severity":1,"message":"50","line":19,"column":30,"nodeType":"51","messageId":"52","endLine":19,"endColumn":32},{"ruleId":"45","replacedBy":"57"},{"ruleId":"47","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["61"],["59"],["60"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [history]",{"range":"64","text":"65"},[1418,1420],"[history]"]